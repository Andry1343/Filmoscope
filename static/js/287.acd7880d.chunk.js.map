{"version":3,"file":"static/js/287.acd7880d.chunk.js","mappings":"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","sources":["components/MovieList/MovieItem/MovieItem.styled.js","components/MovieList/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/getMovies.js","components/pages/Home/Home.styled.js","components/pages/Home/Home.jsx","components/pages/Movies/Movies.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const Box = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 10px 15px 2px rgba(0, 0, 0, 0.5);\n  @media only screen and (min-width: 1201px) {\n    transition: transform cubic-bezier(0.165, 0.84, 0.44, 1) 500ms;\n  &:hover {\n    transform: scale(1.05);\n  }\n  }\n`;\n\nexport const Text = styled.p`\n  height: 30px;\n  font-weight: 100;\n  font-size: 10px;\n  padding: 10px 10px 5px;\n  display: flex;\n  align-items: center;\n\n  @media only screen and (min-width: 240px) {\n    /* For everything bigger than 240px */\n    font-weight: 100;\n    font-size: 10px;\n  }\n\n  @media only screen and (min-width: 320px) {\n    /* For everything bigger than 320px */\n    font-size: 15px;\n    font-weight: 200;\n  }\n  @media only screen and (min-width: 481px) {\n    /* For everything bigger than 481px */\n    font-size: 15px;\n    font-weight: 200;\n  }\n  @media only screen and (min-width: 769px) {\n    /* For everything bigger than 769px */\n    font-size: 15px;\n    font-weight: 200;\n  }\n  @media only screen and (min-width: 1025px) {\n    /* For everything bigger than 1025px */\n    font-size: 15px;\n    font-weight: 200;\n  }\n  @media only screen and (min-width: 1201px) {\n    /* For everything bigger than 1201px */\n    font-size: 20px;\n    font-weight: 200;\n  }\n`;\nexport const MyLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import { Image, Text } from './MovieItem.styled';\nimport { MyLink } from './MovieItem.styled';\nimport { Box } from './MovieItem.styled';\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function MovieItem({\n  movie: { poster_path, title, name, id, vote_average },\n  location,\n}) {\n  return (\n    <li>\n      <MyLink to={`/movies/${id}`} state={{ from: location }}>\n        <Box>\n          <Image\n            src={\n              poster_path\n                ? `${BASE_IMG_URL}` + poster_path\n                : 'https://static7.depositphotos.com/1021974/739/i/950/depositphotos_7397821-stock-photo-cinema.jpg'\n            }\n            alt={title || name}\n          />\n          <Text>{title || name}</Text>\n          <Text>Rate: {vote_average.toFixed(1)} / 10</Text>\n        </Box>\n      </MyLink>\n    </li>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  text-decoration: none;\n  display: grid;\n  grid-template-rows: auto;\n  grid-gap: 15px;\n  margin: 30px auto;\n\n  @media only screen and (min-width: 320px) {\n    /* For everything bigger than 320px */\n    grid-template-columns: repeat(1, 1fr);\n  }\n  @media only screen and (min-width: 481px) {\n    /* For everything bigger than 481px */\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media only screen and (min-width: 769px) {\n    /* For everything bigger than 769px */\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media only screen and (min-width: 1025px) {\n    /* For everything bigger than 1025px */\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media only screen and (min-width: 1201px) {\n    /* For everything bigger than 1201px */\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MovieItem } from './MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\n\nexport function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => {\n        return <MovieItem movie={movie} location={location} key={movie.id} />;\n      })}\n    </List>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'd94f1660bc08f9c6e6ef31fbeee3057f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day';\nconst BY_SEARCH_URL = 'search/movie';\n\nexport async function getTrendingMovies(page) {\n  const response = await axios.get(\n    `${BASE_URL}${TRENDING_URL}?api_key=${API_KEY}&page=${page}`\n  );\n  return response;\n}\n\nexport async function getMovieBySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieActors(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getTrailer(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n}\n\n\n /* export default function openTrailer(id) {\n  getTrailer(id)\n    .then(data => {\n      const key = data.results[0].key;\n\n      iframeTrailer.src = srcTrailer + key;\n     \n\n)}} */\n \n/* export default function openTrailer(id) {\n  findTrailer(id)\n    .then(data => {\n      const key = data.results[0].key;\n\n      iframeTrailer.src = srcTrailer + key;\n      modal.show();\n\n      const closeBtn = document.querySelector('.close-modal__trailer');\n      closeBtn.addEventListener('click', closeModal);\n      function closeModal(e) {\n        modal.close();\n        window.removeEventListener('keydown', closeModalHandler);\n      }\n    })\n    .catch(error => {\n      modal2.show();\n      console.log(error);\n    });\n}\n\nfunction findTrailer(idCard) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${idCard}/videos?api_key=${KEY}&language=en-US`\n  ).then(respons => respons.json());\n} */","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n`;\n","import { Title } from './Home.styled';\nimport { useEffect, useState } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { getTrendingMovies } from 'components/getMovies';\nimport { Button } from '../Movies/Movies.styled';\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\n\nexport const Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const BtnScrollUp = () => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  const loadMoreBtn = () => {\n    setPage(prevPage => prevPage + 1);\n    BtnScrollUp();\n  };\n\n  const loadLessBtn = () => {\n    if (page >= 2) {\n      setPage(prevPage => prevPage - 1);\n    }\n    BtnScrollUp();\n  };\n\n  const handlePageClick = pageNumber => {\n    setPage(pageNumber);\n    BtnScrollUp();\n  };\n\n  const renderPageNumbers = () => {\n    const maxPageNumbers = 6;\n    const halfMaxPageNumbers = Math.floor(maxPageNumbers / 2);\n\n    let startPageNumber = page - halfMaxPageNumbers;\n    let endPageNumber = page + halfMaxPageNumbers;\n\n    if (startPageNumber < 1) {\n      startPageNumber = 1;\n      endPageNumber = maxPageNumbers;\n    }\n\n    if (endPageNumber > totalPages) {\n      endPageNumber = totalPages;\n      startPageNumber = Math.max(1, endPageNumber - maxPageNumbers + 1);\n    }\n\n    return Array.from(\n      { length: endPageNumber - startPageNumber + 1 },\n      (_, index) => {\n        const pageNumber = startPageNumber + index;\n        return (\n          <Button\n            key={pageNumber}\n            active={pageNumber === page}\n            onClick={() => handlePageClick(pageNumber)}\n          >\n            {pageNumber}\n          </Button>\n        );\n      }\n    );\n  };\n\n  useEffect(() => {\n    getTrendingMovies(page)\n      .then(movies => {\n        setMovies(movies.data.results);\n        setTotalPages(movies.data.total_pages);\n      })\n      .catch(error => setError(error.message));\n  }, [page]);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {error && 'Something wrong, reload the page'}\n      <MovieList movies={movies} />\n      {movies.length > 0 && (\n        <div\n          style={{\n            display: 'flex',\n            marginBottom: '20px',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Button type=\"button\" onClick={loadLessBtn}>\n            <SlArrowLeft />\n          </Button>\n          {renderPageNumbers()}\n          <Button type=\"button\" onClick={loadMoreBtn}>\n            <SlArrowRight />\n          </Button>\n        </div>\n      )}\n      {totalPages > 1 && (\n        <div style={{ textAlign: 'center' }}>\n          <p>\n            Page {page} of {totalPages}\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  max-width: 300px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const Button = styled.button`\n\n  background-color: #fff;\n  border: 1px solid #d5d9d9;\n  border-radius: 8px;\n  box-shadow: rgba(213, 217, 217, 0.5) 0 2px 5px 0;\n\n  font-weight: 500;\n  box-sizing: border-box;\n  color: #0f1111;\n  cursor: pointer;\n  font-size: 13px;\n  line-height: 29px;\n  padding: 0 10px 0 11px;\n  &:hover {\n    background-color: orangered;\n    color: white;\n  }\n  /* &:active {\n    background-color: orangered;\n    color: white;\n  } */\n  &:focus {\n    box-shadow: rgba(213, 217, 217, 0.5) 0 2px 5px 0;\n    outline: 0;\n  }\n`;\n"],"names":["Image","styled","Box","Text","MyLink","Link","BASE_IMG_URL","MovieItem","movie","poster_path","title","name","id","vote_average","location","to","state","from","src","alt","toFixed","List","MovieList","movies","useLocation","map","API_KEY","BASE_URL","TRENDING_URL","BY_SEARCH_URL","getTrendingMovies","page","axios","response","getMovieBySearch","query","getMovieDetails","getMovieActors","getMovieReviews","Title","Home","useState","setMovies","error","setError","setPage","totalPages","setTotalPages","BtnScrollUp","window","scrollTo","top","left","behavior","useEffect","then","data","results","total_pages","catch","message","length","style","display","marginBottom","alignItems","justifyContent","type","onClick","prevPage","halfMaxPageNumbers","Math","floor","maxPageNumbers","startPageNumber","endPageNumber","max","Array","_","index","pageNumber","active","handlePageClick","renderPageNumbers","textAlign","Form","Button"],"sourceRoot":""}