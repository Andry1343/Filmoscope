{"version":3,"file":"static/js/501.bf8d4db1.chunk.js","mappings":"6NAEaA,EAAaC,EAAAA,EAAAA,EAAH,yFAMVC,EAASD,EAAAA,EAAAA,EAAH,oE,SCNZ,SAASE,EAAT,GAAsD,IAAD,IAA/BC,OAAUC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC7C,OACE,2BACE,UAACN,EAAD,sBAAqBK,MACrB,UAACH,EAAD,gBAAWI,EAAX,UAGL,CCPM,IAAMC,EAAON,EAAAA,EAAAA,GAAH,iHCCV,SAASO,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAC5B,OACE,SAACF,EAAD,UACGE,EAAQC,KAAI,SAAAN,GACX,OAAO,SAACD,EAAD,CAAYC,OAAQA,GAAaA,EAAOO,GAChD,KAGN,C,sCCTYC,EAAOX,EAAAA,EAAAA,EAAH,oKCKJY,GDGUZ,EAAAA,EAAAA,OAAH,oKCHG,WACrB,OAA8Ba,EAAAA,EAAAA,UAAS,IAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBC,OAAOJ,IACpBK,MAAK,SAAAd,GAAO,OAAIM,EAAWN,EAAQe,KAAKC,QAA5B,IACZC,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAMW,QAAnB,GACf,GAAE,CAACT,KAGF,gCAEGF,GAAS,6CACTP,EAAQmB,OAAS,GAChB,SAACpB,EAAD,CAAaC,QAASA,KAEtB,SAACG,EAAD,2CAIP,GAED,G,mMCjCMiB,EAAU,mCACVC,EAAW,gCACXC,EAAe,qBACfC,EAAgB,eAEf,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBC,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPC,EADO,oBACiBF,EADjB,iBACiCK,IAFnD,cACCE,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBH,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPE,EADO,oBACkBH,EADlB,kBACmCS,IAFrD,cACCF,EADD,yBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,uFACkBwB,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDnB,EADC,oBACakB,IAF/B,cACCO,EADD,yBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8B7B,GAA9B,uFACkBwB,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDnB,EADC,4BACqBkB,IAFvC,cACCO,EADD,yBAIEA,GAJF,kEAOA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA+BV,GAA/B,uFACkBwB,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDnB,EADC,4BACqBkB,IAFvC,cACCO,EADD,yBAIEA,GAJF,kE","sources":["components/ReviewItem/ReviewItem.styled.js","components/ReviewItem/ReviewItem.jsx","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AuthorText = styled.p`\n  font-weight: 200;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Review = styled.p`\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n","import { AuthorText, Review } from './ReviewItem.styled';\n\nexport function ReviewItem({ review: { author, content } }) {\n  return (\n    <li>\n      <AuthorText>Author: {author}</AuthorText>\n      <Review>``{content}``</Review>\n    </li>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 30px 0;\n  border-bottom: 1px solid black;\n  border-image: 1px solid black;\n`;\n","import { ReviewItem } from 'components/ReviewItem/ReviewItem';\nimport { List } from './ReviewsList.styled';\n\nexport function ReviewsList({ reviews }) {\n  return (\n    <List>\n      {reviews.map(review => {\n        return <ReviewItem review={review} key={review.id} />;\n      })}\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const Info = styled.p`\n    font-size: 20px;\n    font-weight: 500;\n    padding: 20px 0;\n    border-bottom: 1px solid black;\n    border-image: 1px solid black;\n`\n\nexport const Trailer = styled.button`\n    font-size: 20px;\n    font-weight: 500;\n    padding: 20px 0;\n    border-bottom: 1px solid black;\n    border-image: 1px solid black;\n`","import { ReviewsList } from 'components/ReviewsList/ReviewsList';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../getMovies';\nimport { Info, /* Trailer */ } from './Reviews.styled';\n/* import { getTrailer } from '../getMovies'; */\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  /* const handleTrailerClick = () => {\n    getTrailer(Number(movieId));\n  }; */\n\n  useEffect(() => {\n    getMovieReviews(Number(movieId))\n      .then(reviews => setReviews(reviews.data.results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n    {/* <Trailer onClick={handleTrailerClick}>Trailer</Trailer> */}\n      {error && 'Something wrong, please reload the page...'}\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews}  />\n      ) : (\n        <Info>There is no reviews yet...</Info>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'd94f1660bc08f9c6e6ef31fbeee3057f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day';\nconst BY_SEARCH_URL = 'search/movie';\n\nexport async function getTrendingMovies(page) {\n  const response = await axios.get(\n    `${BASE_URL}${TRENDING_URL}?api_key=${API_KEY}&page=${page}`\n  );\n  return response;\n}\n\nexport async function getMovieBySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieActors(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getTrailer(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n}\n\n\n /* export default function openTrailer(id) {\n  getTrailer(id)\n    .then(data => {\n      const key = data.results[0].key;\n\n      iframeTrailer.src = srcTrailer + key;\n     \n\n)}} */\n \n/* export default function openTrailer(id) {\n  findTrailer(id)\n    .then(data => {\n      const key = data.results[0].key;\n\n      iframeTrailer.src = srcTrailer + key;\n      modal.show();\n\n      const closeBtn = document.querySelector('.close-modal__trailer');\n      closeBtn.addEventListener('click', closeModal);\n      function closeModal(e) {\n        modal.close();\n        window.removeEventListener('keydown', closeModalHandler);\n      }\n    })\n    .catch(error => {\n      modal2.show();\n      console.log(error);\n    });\n}\n\nfunction findTrailer(idCard) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${idCard}/videos?api_key=${KEY}&language=en-US`\n  ).then(respons => respons.json());\n} */"],"names":["AuthorText","styled","Review","ReviewItem","review","author","content","List","ReviewsList","reviews","map","id","Info","Reviews","useState","setReviews","error","setError","movieId","useParams","useEffect","getMovieReviews","Number","then","data","results","catch","message","length","API_KEY","BASE_URL","TRENDING_URL","BY_SEARCH_URL","getTrendingMovies","page","axios","response","getMovieBySearch","query","getMovieDetails","getMovieActors"],"sourceRoot":""}